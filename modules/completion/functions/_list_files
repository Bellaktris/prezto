#autoload

formattedBytes=""
formatBytes() {
    local i=${1:-0} d="" s=1 S=("B" "KB" "MB" "GB" "TB" "PB" "EB" "YB" "ZB")
    while ((i > 1024 && s < ${#S[@]}-1)); do
        printf -v d "%.2d" $((i % 1024 * 100 / 1024))
        i=$((i / 1024))
        s=$((s + 1))
    done
    if [[ -z "$d" ]]; then
      formattedBytes="$i${S[$s]}"
    else
      formattedBytes="$i.$d${S[$s]}"
    fi
}

local stat f elt what dir
local -a stylevals
integer ok
listfiles=()
listopts=()
zstyle -a ":completion:${curcontext}:" file-list stylevals || return 1
case $WIDGETSTYLE in
        (*complete*) what=insert  ;;
        (*) what=list  ;;
esac
for elt in $stylevals
do
  case $elt in
    (*($what|all|true|1|yes)*=<->) (( ${(P)#1} <= ${elt##*=} )) && (( ok = 1 ))
            break ;;
    ([^=]#($what|all|true|1|yes)[^=]#) (( ok = 1 ))
            break ;;
  esac
done
(( ok )) || return 1
zmodload -F zsh/stat b:zstat 2> /dev/null || return 1
dir=${2:+$2/}
dir=${(Q)dir}
for f in ${(PQ)1}
do
  if [[ ! -e "$dir$f" ]]
  then
    listfiles+=("$dir$f")
    continue
  fi
  zstat -s -H stat -F "%b %e %H:%M" - "$dir$f" > /dev/null 2>&1

  formatBytes $stat[size]
  size=$formattedBytes;
  mtime=$stat[mtime]; mtime=(${(s: :)mtime});
  mtime="${(l:2:)mtime[2]} ${(C)mtime[1]} $mtime[3]";
  attrs="â”‚ ${(l:10:)stat[mode]}  ${(l:12:)size}   $mtime"

  if [[ $dir[1] != '/' ]]; then
    file=$(cd "$(pwd)/$dir" 2>/dev/null; ls --color=always -d -A "$f" 2>/dev/null);
  else
    file=$(cd "$dir" 2>/dev/null; ls --color=always -d -A "$f" 2>/dev/null);
  fi

  if [[ "$file" != '' ]]; then
    sub="${(r(30)( ))f}"
    if [[ ${#f} -ge 30 ]]; then
      file="${file//$f/$sub[1, 26]}... "
    else
      file="${file//$f/$sub}"
    fi
    string=$(echo -n "$file\e[39m$attrs")
    listfiles+=("$string")
  fi
done

(( ${#listfiles} )) && listopts=(-d listfiles -l -o match)
return 0
